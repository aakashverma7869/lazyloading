<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Infinite Scroll | Lazy Load</title>
    <link rel="stylesheet" type="text/css" href="style.css">
    <script src="script.js"></script>
  </head>
  <body>
    <div class="container" id="container" >
        <div class = "heder">
      
        <img class = 'logo' src="https://github.githubassets.com/images/modules/open_graph/github-octocat.png" alt="logo">
        <h1>OctoKit</h1>
    </div>
    </div>
    
    <div class="loading">
        <div class="ball"></div>
        <div class="ball"></div>
        <div class="ball"></div>
    </div>
    <script>
    const container = document.getElementById('container');
const loading = document.querySelector('.loading');
    var i = 0;
    var pagenumber = 10;

getPost();


window.addEventListener('scroll', () => {
	const { scrollTop, scrollHeight, clientHeight } = document.documentElement;
	
	console.log( { scrollTop, scrollHeight, clientHeight });
	
	if(clientHeight + scrollTop >= scrollHeight - 5) {
		// show the loading animation
     
		showLoading();
	}
});

function showLoading() {
	loading.classList.add('show');
	
	// load more data
	setTimeout(getPost, 1000)
}

async function getPost() {
	const postResponse = await fetch(`https://api.github.com/orgs/octokit/repos?page=1&per_page=${pagenumber}`);
	const postData = await postResponse.json();
	
	// const userResponse = await fetch('https://randomuser.me/api');
	// const userData = await userResponse.json();


    const data = { post: postData[i]};
    console.log("the value of i is ->>",i);
    console.log("the value of page number is ->>",pagenumber);
    i = i + 1;
        
        if(i >=pagenumber){
            pagenumber = pagenumber + 10;
        }

	addDataToDOM(data);
    relatedinfo(data)
}


function displayFunction(param)
{
    console.log("entry inside display");
    console.log(param);
    // param.querySelector("#comb").style.display="block"

    if(param.querySelector("#comb").style.display=="block"){
        param.querySelector("#comb").style.display ="none"
    }
    else{
        param.querySelector("#comb").style.display="block"
    }
}

function relatedinfo(data){
    console.log("entry in functin")
    const parent = document.querySelectorAll(".blog-post")
	const postElement1 = document.createElement('div');
	postElement1.classList.add('relatedInfo');
	postElement1.innerHTML = `
        <div class = "comb" id = "comb">
            <button onclick="hideFun()">X</button>
            <div class = "comb-heading">
                <h1> Addition info</h1>

               </div> 
        <div class = "flex">
        <h2> Name :</h2>
		<h2 class="title">${data.post.full_name}</h2>
        </div>
        <div class = "flex" >
        <h2> Description :</h2>
        <h2 class="title">${data.post.description}</h2>
        </div>
        <div class = "flex">
        <h2> Licence :</h2>
        <h2 class="title">${data.post.license.name}</h2>
        </div>
        <div class = "flex">
        <h2> Open Issue :</h2>
        <h2 class="title">${data.post.open_issues}</h2>
        </div>
        <div class = "flex">
        <h2> Language :</h2>
        <h2 class="title">${data.post.language}</h2>
        </div>
        <h2> Permission :</h2>
        <div class = "flex">
        <h2> admin :</h2>
        <h2 class="title">${data.post.permissions.admin}</h2>
        <h2> push :</h2>
        <h2 class="title">${data.post.permissions.push}</h2>
        <h2> pull :</h2>
        <h2 class="title">${data.post.permissions.pull}</h2>
        </div>
       
        
		</div>	
	`;
	parent[parent.length-1].appendChild(postElement1);

}





function addDataToDOM(data) {
	const postElement = document.createElement('div');
	postElement.classList.add('blog-post');
	postElement.setAttribute("onclick","displayFunction(this)")

    postElement.innerHTML = `

        <div class = "flex">
        <h2 style="color:darkblue;"> Name :</h2>
		<h2 class="title">${data.post.name}</h2>
        </div>

        <div class = "flex">
        <h2 style="color:darkblue;"> Open Issue :</h2>
		<h2 class="title">${data.post.open_issues}</h2>
        </div>

        <div class = "flex">
        <h2 style="color:darkblue;"> URL :</h2>
        <h2 class="title">
            
            
          <a>  ${data.post.url} </a></h2>
        </div>

        <div class = "flex">
        <h2 style="color:darkblue;"> Language :</h2>
		<h2 class="title">${data.post.language}</h2>
        </div>

  
			
		</div>
	`;
	container.appendChild(postElement);
	
	loading.classList.remove('show');
}
    </script>
  </body>
</html>
